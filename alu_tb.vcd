$date
	Wed Apr 24 14:10:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 32 ! ALUout [31:0] $end
$var reg 32 " ALUin1 [31:0] $end
$var reg 32 # ALUin2 [31:0] $end
$var reg 3 $ fun3 [2:0] $end
$var reg 7 % func7 [6:0] $end
$scope module DUT $end
$var wire 32 & ALUin1 [31:0] $end
$var wire 32 ' ALUin2 [31:0] $end
$var wire 3 ( func3 [2:0] $end
$var wire 7 ) func7 [6:0] $end
$var reg 32 * ALUout [31:0] $end
$upscope $end
$upscope $end
$scope module phase_counter_tb $end
$var wire 1 + phase_fetch $end
$var wire 1 , phase_execute $end
$var wire 1 - phase_commit $end
$var reg 1 . clk $end
$var reg 1 / rstn $end
$scope module DUT $end
$var wire 1 . clk $end
$var wire 1 / rstn $end
$var wire 1 + phase_fetch $end
$var wire 1 , phase_execute $end
$var wire 1 - phase_commit $end
$var reg 2 0 phase [1:0] $end
$upscope $end
$upscope $end
$scope module program_counter_tb $end
$var wire 32 1 pc [31:0] $end
$var reg 1 2 clk $end
$var reg 32 3 offset [31:0] $end
$var reg 1 4 offset_en $end
$var reg 1 5 phase_commit $end
$var reg 1 6 phase_execute $end
$var reg 1 7 rstn $end
$scope module DUT $end
$var wire 1 2 clk $end
$var wire 32 8 offset [31:0] $end
$var wire 1 4 offset_en $end
$var wire 1 5 phase_commit $end
$var wire 1 6 phase_execute $end
$var wire 1 7 rstn $end
$var reg 32 9 pc [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 9
b0 8
07
06
05
04
b0 3
02
b100000 1
b0 0
0/
0.
0-
0,
1+
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#10
b1100 !
b1100 *
b0 %
b0 )
b0 $
b0 (
b111 #
b111 '
b101 "
b101 &
#20
b11111111111111111111111111111110 !
b11111111111111111111111111111110 *
b100000 %
b100000 )
#30
b100011 !
b100011 *
b1 %
b1 )
#40
b101 !
b101 *
b0 %
b0 )
b111 $
b111 (
#1000
0+
1,
b1 0
12
1.
17
1/
